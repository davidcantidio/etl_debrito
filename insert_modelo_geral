import os
import logging
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from gspread_dataframe import set_with_dataframe
import pandas as pd
from scripts.ELET_etl_geral_meta import etl_geral_meta
from utils.google_sheets import carregar_aba_google_sheets

def atualizar_planilha_destino(creds_path, spreadsheet_id, aba_destino, df):
    """
    Atualiza a aba de destino da planilha usando o ID da planilha.
    """
    scope = [
        'https://spreadsheets.google.com/feeds',
        'https://www.googleapis.com/auth/drive'
    ]
    creds = ServiceAccountCredentials.from_json_keyfile_name(creds_path, scope)
    client = gspread.authorize(creds)

    # Abre a planilha usando o ID
    sh = client.open_by_key(spreadsheet_id)
    worksheet = sh.worksheet(aba_destino)
    
    # Limpa o conteúdo existente na aba
    worksheet.clear()
    
    # Insere o DataFrame na aba, a partir da célula A1
    set_with_dataframe(worksheet, df)
    logging.info(f"Dados inseridos na aba '{aba_destino}' com sucesso.")

def main():
    logging.basicConfig(level=logging.INFO, format='%(levelname)s: %(message)s')

    # Parâmetros de autenticação e URLs/IDs
    creds_path = "creds.json"
    
    # Planilha de origem (para ETL Meta)
    fonte_sheet_url = "https://docs.google.com/spreadsheets/d/1DazUQxspLgT0utOFHcTINbFngXw7Fq0LOq6v4lRGixg/edit"
    fonte_aba = "Meta - Geral"

    # Planilha de destino: use o ID diretamente (mesma planilha ou outra, conforme sua necessidade)
    spreadsheet_id = "1DazUQxspLgT0utOFHcTINbFngXw7Fq0LOq6v4lRGixg"  # ID da planilha de destino
    aba_destino = "modeloGeral"

    try:
        logging.info("Lendo dados da aba de origem (Meta - Geral)...")
        df_origem = carregar_aba_google_sheets(creds_path, fonte_sheet_url, fonte_aba)
        logging.info(f"Dados de origem carregados: {df_origem.shape[0]} linhas")
    except Exception as e:
        logging.error("Erro ao ler os dados da fonte: %s", e)
        raise

    try:
        logging.info("Aplicando ETL Meta...")
        etl = etl_geral_meta(df_origem)
        df_tratado = etl.processar()
        logging.info(f"ETL concluído: {df_tratado.shape[0]} linhas tratadas")
    except Exception as e:
        logging.error("Erro durante o processamento ETL: %s", e)
        raise

    try:
        logging.info("Inserindo dados na aba modeloGeral da planilha de destino...")
        atualizar_planilha_destino(creds_path, spreadsheet_id, aba_destino, df_tratado)
    except Exception as e:
        logging.error("Erro ao inserir dados na planilha de destino: %s", e)
        raise

if __name__ == "__main__":
    main()
